service: sekwah-maven
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  lambdaEdgePreExistingCloudFront:
    validStages:
      - staging
      - production
      - dev

plugins:
  - serverless-lambda-edge-pre-existing-cloudfront

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  # Need to look at new format, works for now in 2.x.x
  role: LambdaEdgeMavenRole

  # you can overwrite defaults here
  #  stage: dev
  #  region: eu-west-1
  # Needs to be here for lambda edge functions
  region: us-east-1

package:
  individually: true
  excludeDevDependencies: true
  exclude:
    - "**/*"  # quotes(") are needed

functions:
  mavenFolderRedirect:
    handler: folderRedirect.folderredirect
    package:
      include:
        - folderRedirect.js
        #- node_modules/**
    events:
      # Using npm install --save-dev serverless-lambda-edge-pre-existing-cloudfront
      - preExistingCloudFront:
          distributionId: ${env:CLOUDFRONT_DISTRIBUTION_ID} # CloudFront distribution ID you want to associate
          eventType: origin-request # Choose event to trigger your Lambda function, which are `viewer-request`, `origin-request`, `origin-response` or `viewer-response`
          pathPattern: '*' # Specifying the CloudFront behavior
          includeBody: false # Whether including body or not within request
          stage: dev
  mavenFileDisplay:
    handler: alterHeaders.fileheaders
    memorySize: 128
    timeout: 5
    package:
      include:
        - alterHeaders.js
    events:
      - preExistingCloudFront:
          distributionId: ${env:CLOUDFRONT_DISTRIBUTION_ID} # CloudFront distribution ID you want to associate
          eventType: viewer-response # Choose event to trigger your Lambda function, which are `viewer-request`, `origin-request`, `origin-response` or `viewer-response`
          pathPattern: '*' # Specifying the CloudFront behavior
          includeBody: false # Whether including body or not within request
          stage: dev

resources:
  Resources:
    LambdaEdgeMavenRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: LambdaEdgeMavenRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - edgelambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
